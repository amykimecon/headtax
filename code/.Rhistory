hk_departure <- read_csv(glue("{dbox}/raw/hk_harbor_departures.csv"))
ggplot(hk_departure %>% filter(YEAR > 1880) %>%
#mutate(EMIG_TOT = EMIG_TOT/10) %>%
#select(-EMIG_US) %>%
pivot_longer(cols = starts_with("EMIG"), names_to = "Group",
names_prefix = "EMIG_", values_to = "EMIG") %>%
filter(YEAR < 1914),
aes(x = YEAR, y = EMIG, color = Group)) + geom_line()
## chinese population (+ guangdong interp)
chinapop <- read_csv(glue("{dbox}/raw/CHINAPOP.csv")) %>%
mutate(Guangdong_POP_interp = spline(Year, Guangdong_POP, method = "natural", xout = Year)$y) %>%
filter(Year < 1930 & Year > 1870)
## maddison population and gdp per capita data
maddison_data <- read_csv(glue("{dbox}/raw/maddison_population.csv")) %>%
filter(Country %in% c("Canada", country_list)) %>%
pivot_longer(-Country, names_to = "Year", values_to = "POP") %>%
mutate(POP = POP*1000) %>%
left_join(read_csv(glue("{dbox}/raw/maddison_gdppercapita.csv")) %>%
pivot_longer(-Country, names_to = "Year", values_to = "GDPPERCAP")) %>%
pivot_wider(id_cols = Year, names_from = "Country", names_sep = "_", values_from = c(POP, GDPPERCAP)) %>%
purrr::discard(~length(.x)-sum(is.na(.x)) < 2) %>%
mutate(across(-Year, function(.x) spline(Year, .x, method = "natural", xout = Year)$y, .names = "INTERP_{.col}")) %>%
left_join(chinapop %>% mutate(Year = as.character(Year)) %>% select(c(Year, Guangdong_POP_interp))) %>%
mutate(INTERP_POP_China = Guangdong_POP_interp*1000000) %>% select(-Guangdong_POP_interp)
## wid.world inequality data
wid_data_raw <- read_delim(glue("{dbox}/raw/WID/wid_inequality_raw.csv"), delim = ";", skip = 1)
newnames <- str_extract(names(wid_data_raw), "^.+[A-Z]{2}")[3:length(names(wid_data_raw))] %>%
str_replace("CN","China") %>% str_replace("BE", "Belgium") %>% str_replace("DK", "Denmark") %>%
str_replace("FR", "France") %>% str_replace("DE", "Germany") %>% str_replace("GR", "Greece") %>%
str_replace("IN", "India") %>% str_replace("JP", "Japan") %>% str_replace("NL", "Netherlands") %>%
str_replace("NO", "Norway") %>% str_replace("SE", "Sweden") %>% str_replace('FI', "Finland") %>%
str_replace("IT", "Italy") %>% str_replace("CL", "Chile") %>% str_replace("BR", "Brazil") %>%
str_replace("MX", "Mexico") %>% str_replace("TR", "Turkey") %>% str_replace("AU", "Australia") %>%
str_replace("AT", "Austria") %>% str_replace("CA", "Canada") %>% str_replace("sptinc_z","INCSHARE50PCT")
names(wid_data_raw) <- c("Percentile", "Year", newnames)
wid_data <- wid_data_raw %>% filter(Percentile == "p0p50") %>% #taking bottom 50 percent only
select(c("Year", starts_with("INCSHARE50PCT"))) %>%
purrr::discard(~length(.x)-sum(is.na(.x)) < 2) %>%
mutate(across(-Year, function(.x) spline(Year, .x, method = "natural", xout = Year)$y, .names = "INTERP_{.col}"))
yrimm_reg <- reg_chi %>%
group_by(YRIMM, tax) %>%
summarize(CHIFLOW_REGISTER = n()) %>%
arrange(YRIMM)
# number of immigrants by year and by birthplace from ca census data
yrimm_census <- can_imm %>% group_by(YEAR, YRIMM, BPL, tax) %>%
summarize(FLOW = sum(WEIGHT)) %>%
filter(BPL %in% country_list) %>%
filter((YEAR == 1901 & YRIMM < 1901) |
(YEAR == 1911 & YRIMM < 1911 & YRIMM >= 1901) |
(YEAR == 1921 & YRIMM < 1921 & YRIMM >= 1911)) # only taking YRIMM from most recent census (lowest rate of loss to outmigration)
flow_regress <- yrimm_census %>% ungroup() %>% select(-c(YEAR,tax)) %>% #census data (flows)
full_join(popstock, by = c("YRIMM"="YEAR", "BPL")) %>% #population stocks
full_join(maddison_data %>% mutate(Year = as.double(Year)) %>% #source country population and gdp per capita data
left_join(wid_data) %>% #source country inequality data
pivot_longer(-Year, names_to = c(".value", "BPL"), names_pattern = "(.*)_([A-z]+)$"),
by = c("YRIMM" = "Year", "BPL")) %>%
group_by(BPL) %>% arrange(YRIMM) %>%
mutate(FLOW = ifelse(is.na(FLOW) & cumprod(is.na(FLOW)) != 1, min(FLOW, na.rm=TRUE), FLOW),
logFLOWOVERPOP = log(FLOW/INTERP_POP), #dividing flows and stocks by source country population
POPSTOCK = lag(CANPOP)/INTERP_POP) %>%
pivot_wider(id_cols = c(YRIMM), names_from = BPL,
values_from = c(FLOW, CANPOP, INTERP_POP, INTERP_GDPPERCAP, INTERP_INCSHARE50PCT, logFLOWOVERPOP, POPSTOCK)) %>%
left_join(yrimm_reg) %>% #register data
left_join(immflow, by = c("YRIMM" = "Year")) %>% #total immigration inflow into canada
left_join(hk_departure, by = c("YRIMM" = "YEAR")) %>% #total emigration outflow from hong kong
left_join(popstock %>% filter(BPL == "ForeignBorn") %>% rename(IMMPOP = CANPOP) %>% select(c(YEAR, IMMPOP)), by = c("YRIMM" = "YEAR")) %>%
mutate(across(starts_with("INTERP_GDPPERCAP"), ~ .x/INTERP_GDPPERCAP_Canada, .names = "REL_{.col}"),
across(starts_with("INTERP_INCSHARE50PCT"), ~ .x/INTERP_INCSHARE50PCT_Canada, .names = "REL_{.col}"),
EMIGOVERPOP = EMIG_TOT/INTERP_POP_China,
IMMOVERPOP = IMMFLOW_NATL/IMMPOP,
REGFLOWOVERPOP_China = CHIFLOW_REGISTER/INTERP_POP_China,
logREGFLOWOVERPOP_China = log(REGFLOWOVERPOP_China),
tax = case_when(YRIMM <= 1885 ~ 0,
YRIMM <= 1900 ~ 50,
YRIMM <= 1903 ~ 100,
YRIMM < 1924 ~ 500))
ggplot(flow_regress, aes(x = YRIMM, y = logFLOWOVERPOP_China)) + geom_line()
## REGRESSIONS V1: CHINA ONLY
toggle = "display"
#toggle = "output"
# using census flows (maybe don't need here?)
flowreg1 <- lm(data = flow_regress %>% filter(YRIMM > 1870 & YRIMM < 1921), logFLOWOVERPOP_China ~ factor(tax) + POPSTOCK_China + I(POPSTOCK_China^2)
+ REL_INTERP_GDPPERCAP_China + REL_INTERP_INCSHARE50PCT_China + I(REL_INTERP_INCSHARE50PCT_China^2))
# flowreg1 <- lm(data = flow_regress %>% filter(YRIMM > 1870 & YRIMM < 1923), logFLOWOVERPOP_China ~ EMIGOVERPOP + IMMOVERPOP + factor(tax) + POPSTOCK_China + I(POPSTOCK_China^2)
#                + REL_INTERP_GDPPERCAP_China + REL_INTERP_INCSHARE50PCT_China + I(REL_INTERP_INCSHARE50PCT_China^2))
# using register flows
# just imm/em and popstock
flowreg2 <- lm(data = flow_regress %>% filter(YRIMM > 1885 & YRIMM < 1923), logREGFLOWOVERPOP_China ~ EMIGOVERPOP + IMMOVERPOP + factor(tax) + POPSTOCK_China + I(POPSTOCK_China^2))
# cont tax instead of factor
flowreg3 <- lm(data = flow_regress %>% filter(YRIMM > 1885 & YRIMM < 1923), logREGFLOWOVERPOP_China ~ EMIGOVERPOP + IMMOVERPOP + tax + POPSTOCK_China + I(POPSTOCK_China^2))
# add rel income (maybe exclude this one)
flowreg4 <- lm(data = flow_regress %>% filter(YRIMM > 1885 & YRIMM < 1923), logREGFLOWOVERPOP_China ~ EMIGOVERPOP + IMMOVERPOP + factor(tax) + POPSTOCK_China + I(POPSTOCK_China^2) + REL_INTERP_GDPPERCAP_China)
# add rel ineq and rel ineq sq.
flowreg5 <- lm(data = flow_regress %>% filter(YRIMM > 1885 & YRIMM < 1923), logREGFLOWOVERPOP_China ~ EMIGOVERPOP + IMMOVERPOP + factor(tax) + POPSTOCK_China + I(POPSTOCK_China^2)
+ REL_INTERP_GDPPERCAP_China + REL_INTERP_INCSHARE50PCT_China + I(REL_INTERP_INCSHARE50PCT_China^2))
if (toggle == "display"){
print(summary(flowreg1))
print(summary(flowreg2))
print(summary(flowreg3))
print(summary(flowreg4))
print(summary(flowreg5))
}
## REGRESSIONS V2: All countries
flow_regress_long <- flow_regress %>% select(-c(starts_with("FLOW"), starts_with("CANPOP"), starts_with("INTERP_POP"),
starts_with("INTERP_GDPPERCAP"), starts_with("INTERP_INCSHARE50PCT"))) %>%
pivot_longer(c(starts_with("logFLOWOVERPOP"), starts_with("REL_INTERP"), starts_with("POPSTOCK")),
names_to = c(".value", "BPL"), names_pattern = "(.*)_([A-z]+)$") %>%
filter(BPL != "Canada" & BPL != "ForeignBorn") %>%
dummy_cols(select_columns = c("BPL", "tax")) %>%
mutate(across(starts_with("BPL_"), ~.x*tax_50, .names = "{.col}_tax_50"),
across(starts_with("BPL_"), ~.x*tax_100, .names = "{.col}_tax_100"),
across(starts_with("BPL_"), ~.x*tax_500, .names = "{.col}_tax_500"))
ggplot(flow_regress_long, aes(x = YRIMM, y = logFLOWOVERPOP)) + geom_line() + facet_wrap("BPL")
interact_str <- paste0(glue_collapse(glue("BPL_{country_list}_tax_50"), sep = "+"), "+",
glue_collapse(glue("BPL_{country_list}_tax_100"), sep = "+"), "+",
glue_collapse(glue("BPL_{country_list}_tax_500"), sep = "+"))
flowregall1 <- lm(data = flow_regress_long %>% filter(YRIMM > 1880 & YRIMM < 1921), logFLOWOVERPOP ~ factor(tax) + factor(BPL) +
POPSTOCK + I(POPSTOCK^2) + REL_INTERP_GDPPERCAP + REL_INTERP_INCSHARE50PCT + I(REL_INTERP_INCSHARE50PCT^2))
flowregall2 <- lm(data = flow_regress_long %>% filter(YRIMM > 1880 & YRIMM < 1921),
paste0("logFLOWOVERPOP ~ factor(BPL) + POPSTOCK + I(POPSTOCK^2) + REL_INTERP_GDPPERCAP + REL_INTERP_INCSHARE50PCT +
I(REL_INTERP_INCSHARE50PCT^2) +", interact_str))
flowregall_base <- lm(data = flow_regress_long %>% filter(YRIMM > 1880 & YRIMM < 1921), logFLOWOVERPOP ~ factor(BPL) +
POPSTOCK + I(POPSTOCK^2) + REL_INTERP_GDPPERCAP + REL_INTERP_INCSHARE50PCT + I(REL_INTERP_INCSHARE50PCT^2),
na.action = na.exclude)
if (toggle == "display"){
print(summary(flowregall1))
print(summary(flowregall2))
print(summary(flowregall_base))
}
### setting all filepaths
root = "~/Dropbox (Princeton)/marriagebar"
git = "~/GitHub/marriagebar"
rawdata = glue("{root}/ipums_raw")
### MAIN FILE FOR MARRIAGEBAR PROJECT -- RUN TO GENERATE ALL CLEANED DATA, FIGURES AND TABLES
### AUTHOR: AMY KIM
### LAST EDITED: MAY 2023
# importing all packages
library(tidyverse)
install.packages("tidyverse")
### MAIN FILE FOR MARRIAGEBAR PROJECT -- RUN TO GENERATE ALL CLEANED DATA, FIGURES AND TABLES
### AUTHOR: AMY KIM
### LAST EDITED: MAY 2023
# importing all packages
library(tidyverse)
# importing all packages
library(tidyverse)
install.packages("tidyverse", dependencies = TRUE )
install.packages("ragg")
install.packages("textshaping")
install.packages("textshaping")
install.packages("tidyverse")
# importing all packages
library(tidyverse)
library(glue)
library(ggpubr)
install.packages("ggplot")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggpubr")
install.packages("ggpubr")
# importing all packages
library(tidyverse)
library(glue)
library(ggpubr)
library(xtable)
library(stargazer)
### setting all filepaths
root = "~/Dropbox (Princeton)/marriagebar"
git = "~/GitHub/marriagebar"
rawdata = glue("{root}/ipums_raw")
outdata = glue("{root}/clean_data")
outfigs = glue("{git}/figures")
### colors
mw_col = "#0097ff"
sw_col = "#006200"
men_col = "#ff8e66"
control_col = "#bc6e23"
treat_col = "#154783"
# mw_col_line = "#154783"
# sw_col_line = "#709522"
# men_col_line = "#B3474A"
#
# treat_col_line = "#154783"
# control_col_line = "#BC6E23"
### cleaning data (or loading all cleaned datasets) -- comment out one of these
## code to clean data
# source(glue("{git}/code/0_census_clean.R"))
# loading all cleaned datasets
samp_byyear <- read_csv(glue("{outdata}/samp_byyear.csv"))
filtered_bind <- read_csv(glue("{outdata}/filtereddata.csv"))
countydist_byocc <- read_csv(glue("{outdata}/countydist_byocc.csv"))
countysumm <- read_csv(glue("{outdata}/countysumm.csv"))
ggplot(data = samp_byyear, aes(x = YEAR, y = pctworkers, fill = factor(demgroup, levels = c("Men", "Married Women", "Unmarried Women")))) + geom_area() +
xlab("Year") + ylab("Fraction of US Workers") + labs(fill = "") + scale_fill_manual(values=c(men_col, mw_col, sw_col)) +
theme_minimal() + theme(legend.position = "bottom", text = element_text(size=12))
ggplot(data = samp_byyear, aes(x = YEAR, y = pctteachers, fill = factor(demgroup, levels = c("Men", "Married Women", "Unmarried Women")))) + geom_area() +
xlab("Year") + ylab("Fraction of US Teachers") + labs(fill = "") + scale_fill_manual(values=c(men_col, mw_col, sw_col)) +
theme_minimal() + theme(legend.position = "bottom", text = element_text(size=12))
print(samp_byyear %>% filter(demgroup == "Married Women") %>% select(c(YEAR, pct_mw_teaching)))
allyears_raw_samp <- read_csv(glue("{rawdata}/census_sample_allyears.csv"))
names(allyears_raw_samp)
# grouping by year
samp_byyear <- allyears_raw_samp %>%
group_by(YEAR) %>%
mutate(demgroup = case_when(SEX == 1 ~ "Men",
SEX == 2 & MARST == 6 ~ "Unmarried Women",
TRUE ~ "Married Women"),
teacher = ifelse(OCC1950 == 93 & CLASSWKR == 2, 1, 0),
hs_above = ifelse(EDUC >= 6, 1, 0),
coll_above = ifelse(EDUC >= 8, 1, 0)) %>%
filter(LABFORCE == 2 & AGE >= 18 & AGE <= 64) %>%
group_by(YEAR, demgroup) %>%
summarise(pct_mw_teaching = sum(ifelse(demgroup == "Married Women" & teacher == 1, PERWT, 0))/sum(ifelse(demgroup == "Married Women", PERWT, 0)),
numworkers = sum(ifelse(CLASSWKR == 2, PERWT, 0)),
numteachers = sum(ifelse(teacher == 1,PERWT,0)),
pct_hs_above = weighted.mean(hs_above, PERWT, na.rm=TRUE),
pct_coll_above = weighted.mean(hs_above, PERWT, na.rm=TRUE)) %>%
group_by(YEAR) %>%
mutate(pctteachers = numteachers/sum(numteachers),
pctworkers = numworkers/sum(numworkers))
samp_byyear
View(samp_byyear)
# grouping by year
samp_byyear <- allyears_raw_samp %>%
group_by(YEAR) %>%
mutate(demgroup = case_when(SEX == 1 ~ "Men",
SEX == 2 & MARST == 6 ~ "Unmarried Women",
TRUE ~ "Married Women"),
teacher = ifelse(OCC1950 == 93 & CLASSWKR == 2, 1, 0),
hs_above = ifelse(EDUC >= 6, 1, 0),
coll_above = ifelse(EDUC >= 7, 1, 0)) %>%
filter(LABFORCE == 2 & AGE >= 18 & AGE <= 64) %>%
group_by(YEAR, demgroup) %>%
summarise(pct_mw_teaching = sum(ifelse(demgroup == "Married Women" & teacher == 1, PERWT, 0))/sum(ifelse(demgroup == "Married Women", PERWT, 0)),
numworkers = sum(ifelse(CLASSWKR == 2, PERWT, 0)),
numteachers = sum(ifelse(teacher == 1,PERWT,0)),
pct_coll_teachers = sum(ifelse(teacher == 1 & coll_above == 1, PERWT, 0))/sum(ifelse(coll_above == 1, PERWT, 0))) %>%
group_by(YEAR) %>%
mutate(pctteachers = numteachers/sum(numteachers),
pctworkers = numworkers/sum(numworkers))
samp_byyear <- allyears_raw_samp %>%
group_by(YEAR) %>%
mutate(demgroup = case_when(SEX == 1 ~ "Men",
SEX == 2 & MARST == 6 ~ "Unmarried Women",
TRUE ~ "Married Women"),
teacher = ifelse(OCC1950 == 93 & CLASSWKR == 2, 1, 0),
hs_above = ifelse(EDUC >= 6, 1, 0),
coll_above = ifelse(EDUC >= 7, 1, 0)) %>%
filter(LABFORCE == 2 & AGE >= 18 & AGE <= 64) %>%
group_by(YEAR, demgroup) %>%
summarise(pct_dem_teaching = sum(ifelse(teacher == 1, PERWT, 0))/sum(PERWT),
numworkers = sum(ifelse(CLASSWKR == 2, PERWT, 0)),
numteachers = sum(ifelse(teacher == 1,PERWT,0)),
pct_coll_teachers = sum(ifelse(teacher == 1 & coll_above == 1, PERWT, 0))/sum(ifelse(coll_above == 1, PERWT, 0))) %>%
group_by(YEAR) %>%
mutate(pctteachers = numteachers/sum(numteachers),
pctworkers = numworkers/sum(numworkers))
warnings()
install.packages("Hmisc")
if (Sys.getenv("USER") == "amykim"){
dbox = "/Users/amykim/Dropbox (Princeton)/head_tax_data"
git = "/Users/amykim/Documents/GitHub/headtax"
}
country_list <- c("Australia", "China", "France","Germany","India","Italy",
"Japan","Sweden","Turkey")
country_list_old <- c("Australia","Brazil","Chile","China",
"France","Germany","India","Italy",
"Japan","Mexico","Sweden","Turkey")
us <- "#00BFC4"
ht <- "#808080"
c1 <- "#0E2954"
c2 <- "#1F6E8C"
c3 <- "#2E8A99"
c4 <- "#59C1BD"
c5 <- "#94DBD2"
c6 <- "#CFF5E7"
hk1 <- "#3C1518"
hk2 <- "#69140E"
hk3 <- "#A84007"
hk4 <- "#E66B00"
hk5 <- "#FFB370"
########################################################################
### IMPORTING DATA
########################################################################
## chinese registry -- immigration data through ports
# sample pre-1885 is biased (non mandatory registration, so only some selected people registered)
reg_chi <- read_csv(glue("{dbox}/cleaned/chireg.csv")) %>%
mutate(source = "xRegister", group = "Chinese Immigrants", WEIGHT = 1, YRIMM = YEAR, YRIMM_FISCAL = FISCALYEAR,
tax = case_when(YRIMM <= 1885 ~ 0,
YRIMM <= 1900 ~ 50,
YRIMM <= 1903 ~ 100,
YRIMM < 1924 ~ 500))
library(Hmisc)
library(tidyverse)
library(glue)
library(foreign)
library(readxl)
library(stargazer)
########################################################################
### DEFINING PATHS
########################################################################
if (Sys.getenv("USER") == "amykim"){
dbox = "/Users/amykim/Dropbox (Princeton)/head_tax_data"
git = "/Users/amykim/Documents/GitHub/headtax"
}
country_list <- c("Australia", "China", "France","Germany","India","Italy",
"Japan","Sweden","Turkey")
country_list_old <- c("Australia","Brazil","Chile","China",
"France","Germany","India","Italy",
"Japan","Mexico","Sweden","Turkey")
us <- "#00BFC4"
ht <- "#808080"
c1 <- "#0E2954"
c2 <- "#1F6E8C"
c3 <- "#2E8A99"
c4 <- "#59C1BD"
c5 <- "#94DBD2"
c6 <- "#CFF5E7"
hk1 <- "#3C1518"
hk2 <- "#69140E"
hk3 <- "#A84007"
hk4 <- "#E66B00"
hk5 <- "#FFB370"
########################################################################
### IMPORTING DATA
########################################################################
## chinese registry -- immigration data through ports
# sample pre-1885 is biased (non mandatory registration, so only some selected people registered)
reg_chi <- read_csv(glue("{dbox}/cleaned/chireg.csv")) %>%
mutate(source = "xRegister", group = "Chinese Immigrants", WEIGHT = 1, YRIMM = YEAR, YRIMM_FISCAL = FISCALYEAR,
tax = case_when(YRIMM <= 1885 ~ 0,
YRIMM <= 1900 ~ 50,
YRIMM <= 1903 ~ 100,
YRIMM < 1924 ~ 500))
## census data
can_imm <- read_csv(glue("{dbox}/cleaned/can_clean_imm.csv")) %>%
mutate(source = "CA Census", group = "All Immigrants",
tax = case_when(YRIMM <= 1885 ~ 0,
YRIMM <= 1900 ~ 50,
YRIMM <= 1903 ~ 100,
YRIMM < 1924 ~ 500))
#can_chi <- can_imm %>% filter(BORNCHI == 1) %>% mutate(group = "Chinese Immigrants")
#can_jap <- can_imm %>% filter(BORNJAP == 1) %>% mutate(group = "Japanese Immigrants")
## us census data
us_imm <- read_csv(glue("{dbox}/cleaned/us_clean_imm.csv")) %>%
mutate(source = "US Census", group = "All Immigrants", WEIGHT = 1,
tax = case_when(YRIMM <= 1885 ~ 0,
YRIMM <= 1900 ~ 50,
YRIMM <= 1903 ~ 100,
YRIMM < 1924 ~ 500))
us_chi <- us_imm %>% filter(BORNCHI == 1) %>% mutate(group = "Chinese Immigrants")
us_jap <- us_imm %>% filter(BORNJAP == 1) %>% mutate(group = "Japanese Immigrants")
## key head tax years for graphing & labeling vertical lines
headtaxcuts <- data.frame(yrs = c(1885, 1900, 1903, 1923), labs = c("Initial $50 Head Tax", "Increase to $100", "Increase to $500", "Total Imm. Ban"))
## historical macro data (canada)
canhistmacro <- read_xls(glue("{dbox}/raw/CANMACRO_data.xls")) %>% rename(RGNP = RGDP)
## official immigration inflow counts (canada)
immflow <- read_csv(glue("{dbox}/raw/imm_nums.csv"))
## official immigration inflow counts by country (forensczi and wilcox)
immflow_nber <- read_csv(glue("{dbox}/raw/immflow_nber.csv")) %>%
mutate(YRIMM = ifelse(YEAR <= 1907, YEAR - 0.5, YEAR - 0.75)) # fiscal year
## interpolated population stock (canada)
popstock <- read_csv(glue("{dbox}/cleaned/popstock_can.csv")) %>%
filter(INTERP == "spline" & BPL %in% c(country_list, "ForeignBorn", "Canada")) %>%
rename(CANPOP = POP, CANPOP_INTERP = INTERP)
## chinese emigration from HK (canada and total)
hk_departure <- read_csv(glue("{dbox}/raw/hk_harbor_departures.csv"))
ggplot(hk_departure %>% filter(YEAR > 1880) %>%
#mutate(EMIG_TOT = EMIG_TOT/10) %>%
#select(-EMIG_US) %>%
pivot_longer(cols = starts_with("EMIG"), names_to = "Group",
names_prefix = "EMIG_", values_to = "EMIG") %>%
filter(YEAR < 1914),
aes(x = YEAR, y = EMIG, color = Group)) + geom_line()
## chinese population (+ guangdong interp)
chinapop <- read_csv(glue("{dbox}/raw/CHINAPOP.csv")) %>%
mutate(Guangdong_POP_interp = spline(Year, Guangdong_POP, method = "natural", xout = Year)$y) %>%
filter(Year < 1930 & Year > 1870)
## maddison population and gdp per capita data
maddison_data <- read_csv(glue("{dbox}/raw/maddison_population.csv")) %>%
filter(Country %in% c("Canada", country_list)) %>%
pivot_longer(-Country, names_to = "Year", values_to = "POP") %>%
mutate(POP = POP*1000) %>%
left_join(read_csv(glue("{dbox}/raw/maddison_gdppercapita.csv")) %>%
pivot_longer(-Country, names_to = "Year", values_to = "GDPPERCAP")) %>%
pivot_wider(id_cols = Year, names_from = "Country", names_sep = "_", values_from = c(POP, GDPPERCAP)) %>%
purrr::discard(~length(.x)-sum(is.na(.x)) < 2) %>%
mutate(across(-Year, function(.x) spline(Year, .x, method = "natural", xout = Year)$y, .names = "INTERP_{.col}")) %>%
left_join(chinapop %>% mutate(Year = as.character(Year)) %>% select(c(Year, Guangdong_POP_interp))) %>%
mutate(INTERP_POP_China = Guangdong_POP_interp*1000000) %>% select(-Guangdong_POP_interp)
## wid.world inequality data
wid_data_raw <- read_delim(glue("{dbox}/raw/WID/wid_inequality_raw.csv"), delim = ";", skip = 1)
newnames <- str_extract(names(wid_data_raw), "^.+[A-Z]{2}")[3:length(names(wid_data_raw))] %>%
str_replace("CN","China") %>% str_replace("BE", "Belgium") %>% str_replace("DK", "Denmark") %>%
str_replace("FR", "France") %>% str_replace("DE", "Germany") %>% str_replace("GR", "Greece") %>%
str_replace("IN", "India") %>% str_replace("JP", "Japan") %>% str_replace("NL", "Netherlands") %>%
str_replace("NO", "Norway") %>% str_replace("SE", "Sweden") %>% str_replace('FI', "Finland") %>%
str_replace("IT", "Italy") %>% str_replace("CL", "Chile") %>% str_replace("BR", "Brazil") %>%
str_replace("MX", "Mexico") %>% str_replace("TR", "Turkey") %>% str_replace("AU", "Australia") %>%
str_replace("AT", "Austria") %>% str_replace("CA", "Canada") %>% str_replace("sptinc_z","INCSHARE50PCT")
names(wid_data_raw) <- c("Percentile", "Year", newnames)
wid_data <- wid_data_raw %>% filter(Percentile == "p0p50") %>% #taking bottom 50 percent only
select(c("Year", starts_with("INCSHARE50PCT"))) %>%
purrr::discard(~length(.x)-sum(is.na(.x)) < 2) %>%
mutate(across(-Year, function(.x) spline(Year, .x, method = "natural", xout = Year)$y, .names = "INTERP_{.col}"))
yrimm_reg <- reg_chi %>%
group_by(YRIMM, tax) %>%
summarize(CHIFLOW_REGISTER = n()) %>%
arrange(YRIMM)
# number of immigrants by year and by birthplace from ca census data
yrimm_census <- can_imm %>% group_by(YEAR, YRIMM, BPL, tax) %>%
summarize(FLOW = sum(WEIGHT)) %>%
filter(BPL %in% country_list) %>%
filter((YEAR == 1901 & YRIMM < 1901) |
(YEAR == 1911 & YRIMM < 1911 & YRIMM >= 1901) |
(YEAR == 1921 & YRIMM < 1921 & YRIMM >= 1911)) # only taking YRIMM from most recent census (lowest rate of loss to outmigration)
#first combining all long datasets, then normalizing flow and popstock by source country pop,
# then pivoting wide and adding single country datasets
flow_regress <- yrimm_census %>% ungroup() %>% select(-c(YEAR,tax)) %>% #census data (flows)
full_join(popstock, by = c("YRIMM"="YEAR", "BPL")) %>% #population stocks
full_join(maddison_data %>% mutate(Year = as.double(Year)) %>% #source country population and gdp per capita data
left_join(wid_data) %>% #source country inequality data
pivot_longer(-Year, names_to = c(".value", "BPL"), names_pattern = "(.*)_([A-z]+)$"),
by = c("YRIMM" = "Year", "BPL")) %>%
group_by(BPL) %>% arrange(YRIMM) %>%
mutate(FLOW = ifelse(is.na(FLOW) & cumprod(is.na(FLOW)) != 1, min(FLOW, na.rm=TRUE), FLOW),
logFLOWOVERPOP = log(FLOW/INTERP_POP), #dividing flows and stocks by source country population
POPSTOCK = lag(CANPOP)/INTERP_POP) %>%
pivot_wider(id_cols = c(YRIMM), names_from = BPL,
values_from = c(FLOW, CANPOP, INTERP_POP, INTERP_GDPPERCAP, INTERP_INCSHARE50PCT, logFLOWOVERPOP, POPSTOCK)) %>%
left_join(yrimm_reg) %>% #register data
left_join(immflow, by = c("YRIMM" = "Year")) %>% #total immigration inflow into canada
left_join(hk_departure, by = c("YRIMM" = "YEAR")) %>% #total emigration outflow from hong kong
left_join(popstock %>% filter(BPL == "ForeignBorn") %>% rename(IMMPOP = CANPOP) %>% select(c(YEAR, IMMPOP)), by = c("YRIMM" = "YEAR")) %>%
mutate(across(starts_with("INTERP_GDPPERCAP"), ~ .x/INTERP_GDPPERCAP_Canada, .names = "REL_{.col}"),
across(starts_with("INTERP_INCSHARE50PCT"), ~ .x/INTERP_INCSHARE50PCT_Canada, .names = "REL_{.col}"),
EMIGOVERPOP = EMIG_TOT/INTERP_POP_China,
IMMOVERPOP = IMMFLOW_NATL/IMMPOP,
REGFLOWOVERPOP_China = CHIFLOW_REGISTER/INTERP_POP_China,
logREGFLOWOVERPOP_China = log(REGFLOWOVERPOP_China),
tax = case_when(YRIMM <= 1885 ~ 0,
YRIMM <= 1900 ~ 50,
YRIMM <= 1903 ~ 100,
YRIMM < 1924 ~ 500))
ggplot(flow_regress, aes(x = YRIMM, y = logFLOWOVERPOP_China)) + geom_line()
## REGRESSIONS V1: CHINA ONLY
toggle = "display"
#toggle = "output"
# using census flows (maybe don't need here?)
flowreg1 <- lm(data = flow_regress %>% filter(YRIMM > 1870 & YRIMM < 1921), logFLOWOVERPOP_China ~ factor(tax) + POPSTOCK_China + I(POPSTOCK_China^2)
+ REL_INTERP_GDPPERCAP_China + REL_INTERP_INCSHARE50PCT_China + I(REL_INTERP_INCSHARE50PCT_China^2))
# flowreg1 <- lm(data = flow_regress %>% filter(YRIMM > 1870 & YRIMM < 1923), logFLOWOVERPOP_China ~ EMIGOVERPOP + IMMOVERPOP + factor(tax) + POPSTOCK_China + I(POPSTOCK_China^2)
#                + REL_INTERP_GDPPERCAP_China + REL_INTERP_INCSHARE50PCT_China + I(REL_INTERP_INCSHARE50PCT_China^2))
# using register flows
# just imm/em and popstock
flowreg2 <- lm(data = flow_regress %>% filter(YRIMM > 1885 & YRIMM < 1923), logREGFLOWOVERPOP_China ~ EMIGOVERPOP + IMMOVERPOP + factor(tax) + POPSTOCK_China + I(POPSTOCK_China^2))
# cont tax instead of factor
flowreg3 <- lm(data = flow_regress %>% filter(YRIMM > 1885 & YRIMM < 1923), logREGFLOWOVERPOP_China ~ EMIGOVERPOP + IMMOVERPOP + tax + POPSTOCK_China + I(POPSTOCK_China^2))
# add rel income (maybe exclude this one)
flowreg4 <- lm(data = flow_regress %>% filter(YRIMM > 1885 & YRIMM < 1923), logREGFLOWOVERPOP_China ~ EMIGOVERPOP + IMMOVERPOP + factor(tax) + POPSTOCK_China + I(POPSTOCK_China^2) + REL_INTERP_GDPPERCAP_China)
# add rel ineq and rel ineq sq.
flowreg5 <- lm(data = flow_regress %>% filter(YRIMM > 1885 & YRIMM < 1923), logREGFLOWOVERPOP_China ~ EMIGOVERPOP + IMMOVERPOP + factor(tax) + POPSTOCK_China + I(POPSTOCK_China^2)
+ REL_INTERP_GDPPERCAP_China + REL_INTERP_INCSHARE50PCT_China + I(REL_INTERP_INCSHARE50PCT_China^2))
if (toggle == "display"){
print(summary(flowreg1))
print(summary(flowreg2))
print(summary(flowreg3))
print(summary(flowreg4))
print(summary(flowreg5))
}
flowregall1 <- lm(data = flow_regress_long %>% filter(YRIMM > 1880 & YRIMM < 1921), logFLOWOVERPOP ~ factor(tax) + factor(BPL) + IMMOVERPOP +
POPSTOCK + I(POPSTOCK^2) + REL_INTERP_GDPPERCAP + REL_INTERP_INCSHARE50PCT + I(REL_INTERP_INCSHARE50PCT^2))
## REGRESSIONS V2: All countries
flow_regress_long <- flow_regress %>% select(-c(starts_with("FLOW"), starts_with("CANPOP"), starts_with("INTERP_POP"),
starts_with("INTERP_GDPPERCAP"), starts_with("INTERP_INCSHARE50PCT"))) %>%
pivot_longer(c(starts_with("logFLOWOVERPOP"), starts_with("REL_INTERP"), starts_with("POPSTOCK")),
names_to = c(".value", "BPL"), names_pattern = "(.*)_([A-z]+)$") %>%
filter(BPL != "Canada" & BPL != "ForeignBorn") %>%
dummy_cols(select_columns = c("BPL", "tax")) %>%
mutate(across(starts_with("BPL_"), ~.x*tax_50, .names = "{.col}_tax_50"),
across(starts_with("BPL_"), ~.x*tax_100, .names = "{.col}_tax_100"),
across(starts_with("BPL_"), ~.x*tax_500, .names = "{.col}_tax_500"))
library(fastDummies)
install.packages("fastDummies")
library(fastDummies)
## REGRESSIONS V2: All countries
flow_regress_long <- flow_regress %>% select(-c(starts_with("FLOW"), starts_with("CANPOP"), starts_with("INTERP_POP"),
starts_with("INTERP_GDPPERCAP"), starts_with("INTERP_INCSHARE50PCT"))) %>%
pivot_longer(c(starts_with("logFLOWOVERPOP"), starts_with("REL_INTERP"), starts_with("POPSTOCK")),
names_to = c(".value", "BPL"), names_pattern = "(.*)_([A-z]+)$") %>%
filter(BPL != "Canada" & BPL != "ForeignBorn") %>%
dummy_cols(select_columns = c("BPL", "tax")) %>%
mutate(across(starts_with("BPL_"), ~.x*tax_50, .names = "{.col}_tax_50"),
across(starts_with("BPL_"), ~.x*tax_100, .names = "{.col}_tax_100"),
across(starts_with("BPL_"), ~.x*tax_500, .names = "{.col}_tax_500"))
ggplot(flow_regress_long, aes(x = YRIMM, y = logFLOWOVERPOP)) + geom_line() + facet_wrap("BPL")
interact_str <- paste0(glue_collapse(glue("BPL_{country_list}_tax_50"), sep = "+"), "+",
glue_collapse(glue("BPL_{country_list}_tax_100"), sep = "+"), "+",
glue_collapse(glue("BPL_{country_list}_tax_500"), sep = "+"))
flowregall1 <- lm(data = flow_regress_long %>% filter(YRIMM > 1880 & YRIMM < 1921), logFLOWOVERPOP ~ factor(tax) + factor(BPL) + IMMOVERPOP +
POPSTOCK + I(POPSTOCK^2) + REL_INTERP_GDPPERCAP + REL_INTERP_INCSHARE50PCT + I(REL_INTERP_INCSHARE50PCT^2))
flowregall2 <- lm(data = flow_regress_long %>% filter(YRIMM > 1880 & YRIMM < 1921),
paste0("logFLOWOVERPOP ~ factor(BPL) + POPSTOCK + I(POPSTOCK^2) + IMMOVERPOP + REL_INTERP_GDPPERCAP + REL_INTERP_INCSHARE50PCT +
I(REL_INTERP_INCSHARE50PCT^2) +", interact_str))
flowregall_base <- lm(data = flow_regress_long %>% filter(YRIMM > 1880 & YRIMM < 1921), logFLOWOVERPOP ~ factor(BPL) +
POPSTOCK + I(POPSTOCK^2) + IMMOVERPOP + REL_INTERP_GDPPERCAP + REL_INTERP_INCSHARE50PCT + I(REL_INTERP_INCSHARE50PCT^2),
na.action = na.exclude)
if (toggle == "display"){
print(summary(flowregall1))
print(summary(flowregall2))
print(summary(flowregall_base))
}
