!is.na(EntryDateDay_ci44) & !is.na(EntryDateDay_reg) ~ 0, #big mismatch
TRUE ~ 0.25 #missing
),
entry_ship_match = stringsim(EntryShip_ci44, EntryShip_reg, method = "cosine"),
entry_match_score = year_match + month_match + day_match,
birth_match_score = case_when(is.na(BirthYear_reg) | is.na(BirthYear_ci44) ~ 0,
abs(BirthYear_reg - BirthYear_ci44) > 5 ~ 0,
abs(BirthYear_reg - BirthYear_ci44) > 2 ~ 0.5,
abs(BirthYear_reg - BirthYear_ci44) <= 2 ~ 1),
total_score = ifelse(cert_match, 1, 0.5*namesim + (entry_match_score + birth_match_score)/8),
true_match = case_when(
#If exact match with another certificate, return TRUE
cert_match == 1 ~ TRUE,
#If name similarity over 95%, return TRUE
namesim > 0.95 ~ TRUE,
#If name similarity over 90% and date exactly right or date almost right and birth year right, return TRUE
namesim > 0.85 &
(entry_match_score >= 2.5 | (entry_match_score >= 1.5 & birth_match_score == 1)) ~ TRUE,
# If date exactly right and birth year right, return TRUE
namesim > 0.8 &
entry_match_score + birth_match_score >= 3 ~ TRUE,
TRUE ~ FALSE
),
mergedon = certtype
)
return(df_out)
}
merge_names_post <- bind_rows(list(merge_namesdf, merge_all)) %>%
merge_stats() %>%
group_by(ID_ci44) %>%
mutate(nonname_score = entry_match_score+birth_match_score) %>%
arrange(desc(nonname_score), desc(namesim), .by_group = TRUE) %>%
mutate(i = row_number(), n = n(),
certmatches = sum(ifelse(is.na(namedist_osa) & is.na(namedist_cos), 1, 0))) %>%
filter(i == 1)
x <- mutate(unmatched,
filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg"))
imgroot = glue("{dbox}/raw/ci44")
x <- mutate(unmatched,
filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg"))
names(unmatched)
nrow(parsed_clean)
unmatched <- parsed_clean %>% filter(!(ID_ci44 %in% merge_names_post$ID_ci44))
nrow(unmatched)
nrow(filter(parsed_clean, NativeBorn))
# compares raw image files with parsed output and displays missing images if true
# df MUST be of type parsed_tidy -- need to be long but have unique fieldnames for duplicate fields
check_missing_imgs <- function(df, imgroot = glue("{dbox}/raw/ci44", missings_compare = FALSE)){
if (missings_compare){
# get list of images corresp to reels in df
imglist_raw <- bind_rows(lapply(unique(df$reel),
function(.x){
data.frame(reel = .x,
img = as.numeric(str_match(list.files(glue("{imgroot}/t{.x}")), "img([0-9]+)\\.jpg$")[,2]))}))
# list of imgs from df
imglist_df <- df %>% group_by(reel, img) %>% summarize(parsed = TRUE)
if (nrow(imglist_raw) <= nrow(imglist_df)){
print("Error: fewer images in raw source folder than in parsed output. File path misspecified?")
return(NA)
}
# merge with df
merge_imglists <- left_join(imglist_raw, imglist_df) %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg"))
}
else{
merge_imglists <- df %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg"))
}
# iterating through unmatched imgs
fieldnamesdf <- unique(df$type)
colnamesdf <- c(fieldnamesdf[which(!str_detect(fieldnamesdf, "PhysicalMarks") &
!str_detect(fieldnamesdf, "DependentInfo") &
!str_detect(fieldnamesdf, "Remarks"))],
"Remarks1")
makenewplot()
df_out <- bind_rows(lapply(filter(merge_imglists, is.na(parsed))$filepath,
disp_rawimg,
colnames = colnamesdf))
return(df_out)
}
# compares raw image files with parsed output and displays missing images if true
# df MUST be of type parsed_tidy -- need to be long but have unique fieldnames for duplicate fields
check_raw_imgs <- function(df, imgroot = glue("{dbox}/raw/ci44", missings_compare = FALSE)){
if (missings_compare){
# get list of images corresp to reels in df
imglist_raw <- bind_rows(lapply(unique(df$reel),
function(.x){
data.frame(reel = .x,
img = as.numeric(str_match(list.files(glue("{imgroot}/t{.x}")), "img([0-9]+)\\.jpg$")[,2]))}))
# list of imgs from df
imglist_df <- df %>% group_by(reel, img) %>% summarize(parsed = TRUE)
if (nrow(imglist_raw) <= nrow(imglist_df)){
print("Error: fewer images in raw source folder than in parsed output. File path misspecified?")
return(NA)
}
# merge with df
merge_imglists <- left_join(imglist_raw, imglist_df) %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg"))
}
else{
merge_imglists <- df %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg"))
}
# iterating through unmatched imgs
fieldnamesdf <- unique(df$type)
colnamesdf <- c(fieldnamesdf[which(!str_detect(fieldnamesdf, "PhysicalMarks") &
!str_detect(fieldnamesdf, "DependentInfo") &
!str_detect(fieldnamesdf, "Remarks"))],
"Remarks1")
makenewplot()
df_out <- bind_rows(lapply(filter(merge_imglists, is.na(parsed))$filepath,
disp_rawimg,
colnames = colnamesdf))
return(df_out)
}
unmatched <- parsed_clean %>%
filter(!(ID_ci44 %in% merge_names_post$ID_ci44))
nrow(parsed_clean)
nrow(unmatched)
# rewriting unmatched info
unmatched_rewrite <- check_raw_imgs(unmatched)
# df MUST be of type parsed_tidy -- need to be long but have unique fieldnames for duplicate fields
check_raw_imgs <- function(df, imgroot = glue("{dbox}/raw/ci44"), missings_compare = FALSE){
if (missings_compare){
# get list of images corresp to reels in df
imglist_raw <- bind_rows(lapply(unique(df$reel),
function(.x){
data.frame(reel = .x,
img = as.numeric(str_match(list.files(glue("{imgroot}/t{.x}")), "img([0-9]+)\\.jpg$")[,2]))}))
# list of imgs from df
imglist_df <- df %>% group_by(reel, img) %>% summarize(parsed = TRUE)
if (nrow(imglist_raw) <= nrow(imglist_df)){
print("Error: fewer images in raw source folder than in parsed output. File path misspecified?")
return(NA)
}
# merge with df
merge_imglists <- left_join(imglist_raw, imglist_df) %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg"))
}
else{
merge_imglists <- df %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg"))
}
# iterating through unmatched imgs
fieldnamesdf <- unique(df$type)
colnamesdf <- c(fieldnamesdf[which(!str_detect(fieldnamesdf, "PhysicalMarks") &
!str_detect(fieldnamesdf, "DependentInfo") &
!str_detect(fieldnamesdf, "Remarks"))],
"Remarks1")
makenewplot()
df_out <- bind_rows(lapply(filter(merge_imglists, is.na(parsed))$filepath,
disp_rawimg,
colnames = colnamesdf))
return(df_out)
}
unmatched_rewrite <- check_raw_imgs(unmatched)
# SETTING WORKING DIRECTORIES ----
root <- "/Users/amykim/Princeton Dropbox/Amy Kim/head_tax/head_tax_data"
code <- "/Users/amykim/Documents/GitHub/<FILL IN>/code"
# compares raw image files with parsed output and displays missing images if true
# df MUST be of type parsed_tidy -- need to be long but have unique fieldnames for duplicate fields
check_raw_imgs <- function(df, imgroot = glue("{dbox}/raw/ci44"), missings_compare = FALSE){
if (missings_compare){
# get list of images corresp to reels in df
imglist_raw <- bind_rows(lapply(unique(df$reel),
function(.x){
data.frame(reel = .x,
img = as.numeric(str_match(list.files(glue("{imgroot}/t{.x}")), "img([0-9]+)\\.jpg$")[,2]))}))
# list of imgs from df
imglist_df <- df %>% group_by(reel, img) %>% summarize(parsed = TRUE)
if (nrow(imglist_raw) <= nrow(imglist_df)){
print("Error: fewer images in raw source folder than in parsed output. File path misspecified?")
return(NA)
}
# merge with df
merge_imglists <- left_join(imglist_raw, imglist_df) %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg")) %>%
filter(is.na(parsed))
}
else{
merge_imglists <- df %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg"))
}
# iterating through unmatched imgs
fieldnamesdf <- unique(df$type)
colnamesdf <- c(fieldnamesdf[which(!str_detect(fieldnamesdf, "PhysicalMarks") &
!str_detect(fieldnamesdf, "DependentInfo") &
!str_detect(fieldnamesdf, "Remarks"))],
"Remarks1")
makenewplot()
df_out <- bind_rows(lapply(merge_imglists$filepath,
disp_rawimg,
colnames = colnamesdf))
return(df_out)
}
unmatched_rewrite <- check_raw_imgs(unmatched)
check_raw_imgs <- function(df, imgroot = glue("{dbox}/raw/ci44"), missings_compare = FALSE){
if (missings_compare){
# get list of images corresp to reels in df
imglist_raw <- bind_rows(lapply(unique(df$reel),
function(.x){
data.frame(reel = .x,
img = as.numeric(str_match(list.files(glue("{imgroot}/t{.x}")), "img([0-9]+)\\.jpg$")[,2]))}))
# list of imgs from df
imglist_df <- df %>% group_by(reel, img) %>% summarize(parsed = TRUE)
if (nrow(imglist_raw) <= nrow(imglist_df)){
print("Error: fewer images in raw source folder than in parsed output. File path misspecified?")
return(NA)
}
# merge with df
merge_imglists <- left_join(imglist_raw, imglist_df) %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg")) %>%
filter(is.na(parsed))
# iterating through unmatched imgs
fieldnamesdf <- unique(df$type)
colnamesdf <- c(fieldnamesdf[which(!str_detect(fieldnamesdf, "PhysicalMarks") &
!str_detect(fieldnamesdf, "DependentInfo") &
!str_detect(fieldnamesdf, "Remarks"))],
"Remarks1")
}
else{
merge_imglists <- df %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg"))
colnamesdf <- c(names(df)[which(!str_detect(names(df), "PhysicalMarks") &
!str_detect(names(df), "DependentInfo") &
!str_detect(names(df), "Remarks"))])
}
makenewplot()
df_out <- bind_rows(lapply(merge_imglists$filepath,
disp_rawimg,
colnames = colnamesdf))
return(df_out)
}
unmatched_rewrite <- check_raw_imgs(unmatched)
names(unmatched)
# compares raw image files with parsed output and displays missing images if true
# df MUST be of type parsed_tidy -- need to be long but have unique fieldnames for duplicate fields
check_raw_imgs <- function(df, imgroot = glue("{dbox}/raw/ci44"), missings_compare = FALSE){
if (missings_compare){
# get list of images corresp to reels in df
imglist_raw <- bind_rows(lapply(unique(df$reel),
function(.x){
data.frame(reel = .x,
img = as.numeric(str_match(list.files(glue("{imgroot}/t{.x}")), "img([0-9]+)\\.jpg$")[,2]))}))
# list of imgs from df
imglist_df <- df %>% group_by(reel, img) %>% summarize(parsed = TRUE)
if (nrow(imglist_raw) <= nrow(imglist_df)){
print("Error: fewer images in raw source folder than in parsed output. File path misspecified?")
return(NA)
}
# merge with df
merge_imglists <- left_join(imglist_raw, imglist_df) %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg")) %>%
filter(is.na(parsed))
# iterating through unmatched imgs
fieldnamesdf <- unique(df$type)
colnamesdf <- c(fieldnamesdf[which(!str_detect(fieldnamesdf, "PhysicalMarks") &
!str_detect(fieldnamesdf, "DependentInfo") &
!str_detect(fieldnamesdf, "Remarks"))],
"Remarks1")
}
else{
merge_imglists <- df %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg"))
colnamesdf <- c(names(df)[which(!str_detect(names(df), "PhysicalMarks") &
!str_detect(names(df), "DependentInfo") &
!str_detect(names(df), "Remarks") &
!str_detect(names(df), "_Clean") &
!str_detect(names(df), "_ci44") &
!str_detect(names(df), "EntryDateMonth|EntryDateDay"))],
"Remarks1")
}
print(colnamesdf)
makenewplot()
df_out <- bind_rows(lapply(merge_imglists$filepath,
disp_rawimg,
colnames = colnamesdf))
return(df_out)
}
# rewriting unmatched info
unmatched_rewrite <- check_raw_imgs(unmatched)
# compares raw image files with parsed output and displays missing images if true
# df MUST be of type parsed_tidy -- need to be long but have unique fieldnames for duplicate fields
check_raw_imgs <- function(df, imgroot = glue("{dbox}/raw/ci44"), missings_compare = FALSE){
if (missings_compare){
# get list of images corresp to reels in df
imglist_raw <- bind_rows(lapply(unique(df$reel),
function(.x){
data.frame(reel = .x,
img = as.numeric(str_match(list.files(glue("{imgroot}/t{.x}")), "img([0-9]+)\\.jpg$")[,2]))}))
# list of imgs from df
imglist_df <- df %>% group_by(reel, img) %>% summarize(parsed = TRUE)
if (nrow(imglist_raw) <= nrow(imglist_df)){
print("Error: fewer images in raw source folder than in parsed output. File path misspecified?")
return(NA)
}
# merge with df
merge_imglists <- left_join(imglist_raw, imglist_df) %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg")) %>%
filter(is.na(parsed))
# iterating through unmatched imgs
fieldnamesdf <- unique(df$type)
colnamesdf <- c(fieldnamesdf[which(!str_detect(fieldnamesdf, "PhysicalMarks") &
!str_detect(fieldnamesdf, "DependentInfo") &
!str_detect(fieldnamesdf, "Remarks"))],
"Remarks1")
}
else{
merge_imglists <- df %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg"))
colnamesdf <- c(names(df)[which(!str_detect(names(df), "PhysicalMarks|DependentInfo|Remarks|ArrivalCert|aka") &
!str_detect(names(df), "_Clean|_clean|_ci44|EntryDateMonth|EntryDateDay|NativeBornStrict"))],
"Remarks1", "aka1", "ArrivalCert1", "ArrivalCert2")
}
print(colnamesdf)
makenewplot()
df_out <- bind_rows(lapply(merge_imglists$filepath,
disp_rawimg,
colnames = colnamesdf))
return(df_out)
}
unmatched_rewrite <- check_raw_imgs(unmatched)
# compares raw image files with parsed output and displays missing images if true
# df MUST be of type parsed_tidy -- need to be long but have unique fieldnames for duplicate fields
check_raw_imgs <- function(df, imgroot = glue("{dbox}/raw/ci44"), missings_compare = FALSE){
if (missings_compare){
# get list of images corresp to reels in df
imglist_raw <- bind_rows(lapply(unique(df$reel),
function(.x){
data.frame(reel = .x,
img = as.numeric(str_match(list.files(glue("{imgroot}/t{.x}")), "img([0-9]+)\\.jpg$")[,2]))}))
# list of imgs from df
imglist_df <- df %>% group_by(reel, img) %>% summarize(parsed = TRUE)
if (nrow(imglist_raw) <= nrow(imglist_df)){
print("Error: fewer images in raw source folder than in parsed output. File path misspecified?")
return(NA)
}
# merge with df
merge_imglists <- left_join(imglist_raw, imglist_df) %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg")) %>%
filter(is.na(parsed))
# iterating through unmatched imgs
fieldnamesdf <- unique(df$type)
colnamesdf <- c(fieldnamesdf[which(!str_detect(fieldnamesdf, "PhysicalMarks") &
!str_detect(fieldnamesdf, "DependentInfo") &
!str_detect(fieldnamesdf, "Remarks"))],
"Remarks1")
}
else{
merge_imglists <- df %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg"))
colnamesdf <- c(names(df)[which(!str_detect(names(df), "PhysicalMarks|DependentInfo|Remarks|ArrivalCert|aka|reel|img|filename") &
!str_detect(names(df), "_Clean|_clean|_ci44|EntryDateMonth|EntryDateDay|NativeBornStrict"))],
"Remarks1", "aka1", "ArrivalCert1", "ArrivalCert2")
}
makenewplot()
df_out <- bind_rows(lapply(merge_imglists$filepath,
disp_rawimg,
colnames = colnamesdf))
return(df_out)
}
unmatched_rewrite <- check_raw_imgs(unmatched)
nrow(unmatched_rewrite)
check_raw_imgs <- function(df, outpath,
imgroot = glue("{dbox}/raw/ci44"),
missings_compare = FALSE){
if (missings_compare){
# get list of images corresp to reels in df
imglist_raw <- bind_rows(lapply(unique(df$reel),
function(.x){
data.frame(reel = .x,
img = as.numeric(str_match(list.files(glue("{imgroot}/t{.x}")), "img([0-9]+)\\.jpg$")[,2]))}))
# list of imgs from df
imglist_df <- df %>% group_by(reel, img) %>% summarize(parsed = TRUE)
if (nrow(imglist_raw) <= nrow(imglist_df)){
print("Error: fewer images in raw source folder than in parsed output. File path misspecified?")
return(NA)
}
# merge with df
merge_imglists <- left_join(imglist_raw, imglist_df) %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg")) %>%
filter(is.na(parsed))
# iterating through unmatched imgs
fieldnamesdf <- unique(df$type)
colnamesdf <- c(fieldnamesdf[which(!str_detect(fieldnamesdf, "PhysicalMarks") &
!str_detect(fieldnamesdf, "DependentInfo") &
!str_detect(fieldnamesdf, "Remarks"))],
"Remarks1")
}
else{
merge_imglists <- df %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg"))
colnamesdf <- c(names(df)[which(!str_detect(names(df), "PhysicalMarks|DependentInfo|Remarks|ArrivalCert|aka|reel|img|filename") &
!str_detect(names(df), "_Clean|_clean|_ci44|EntryDateMonth|EntryDateDay|NativeBornStrict"))],
"Remarks1", "aka1", "ArrivalCert1", "ArrivalCert2")
}
makenewplot()
df_out <- bind_rows(lapply(merge_imglists$filepath,
disp_rawimg,
colnames = colnamesdf))
return(df_out)
}
?file.exists
# compares raw image files with parsed output and displays missing images if true
# df MUST be of type parsed_tidy -- need to be long but have unique fieldnames for duplicate fields
check_raw_imgs <- function(df, outpath,
imgroot = glue("{dbox}/raw/ci44"),
missings_compare = FALSE){
if (missings_compare){
# get list of images corresp to reels in df
imglist_raw <- bind_rows(lapply(unique(df$reel),
function(.x){
data.frame(reel = .x,
img = as.numeric(str_match(list.files(glue("{imgroot}/t{.x}")), "img([0-9]+)\\.jpg$")[,2]))}))
# list of imgs from df
imglist_df <- df %>% group_by(reel, img) %>% summarize(parsed = TRUE)
if (nrow(imglist_raw) <= nrow(imglist_df)){
print("Error: fewer images in raw source folder than in parsed output. File path misspecified?")
return(NA)
}
# merge with df
merge_imglists <- left_join(imglist_raw, imglist_df) %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg")) %>%
filter(is.na(parsed))
# iterating through unmatched imgs
fieldnamesdf <- unique(df$type)
colnamesdf <- c(fieldnamesdf[which(!str_detect(fieldnamesdf, "PhysicalMarks") &
!str_detect(fieldnamesdf, "DependentInfo") &
!str_detect(fieldnamesdf, "Remarks"))],
"Remarks1")
}
else{
merge_imglists <- df %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg"))
colnamesdf <- c(names(df)[which(!str_detect(names(df), "PhysicalMarks|DependentInfo|Remarks|ArrivalCert|aka|reel|img|filename") &
!str_detect(names(df), "_Clean|_clean|_ci44|EntryDateMonth|EntryDateDay|NativeBornStrict"))],
"Remarks1", "aka1", "ArrivalCert1", "ArrivalCert2")
}
makenewplot()
first = TRUE
for (file in merge_imglists$filepath){
if (first){
tempdata <- disp_rawimg(file)
first = FALSE
}
else{
tempdata <- bind_rows(list(tempdata, disp_rawimg(file)))
}
write_csv(tempdata, outpath)
}
# df_out <- bind_rows(lapply(merge_imglists$filepath,
#                                 disp_rawimg,
#                                 colnames = colnamesdf))
return(tempdata)
}
unmatched_rewrite <- check_raw_imgs(unmatched,
outpath = glue("{dbox}/cleaned/missing_ci44_imgs.csv"))
# compares raw image files with parsed output and displays missing images if true
# df MUST be of type parsed_tidy -- need to be long but have unique fieldnames for duplicate fields
check_raw_imgs <- function(df, outpath,
imgroot = glue("{dbox}/raw/ci44"),
missings_compare = FALSE){
if (missings_compare){
# get list of images corresp to reels in df
imglist_raw <- bind_rows(lapply(unique(df$reel),
function(.x){
data.frame(reel = .x,
img = as.numeric(str_match(list.files(glue("{imgroot}/t{.x}")), "img([0-9]+)\\.jpg$")[,2]))}))
# list of imgs from df
imglist_df <- df %>% group_by(reel, img) %>% summarize(parsed = TRUE)
if (nrow(imglist_raw) <= nrow(imglist_df)){
print("Error: fewer images in raw source folder than in parsed output. File path misspecified?")
return(NA)
}
# merge with df
merge_imglists <- left_join(imglist_raw, imglist_df) %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg")) %>%
filter(is.na(parsed))
# iterating through unmatched imgs
fieldnamesdf <- unique(df$type)
colnamesdf <- c(fieldnamesdf[which(!str_detect(fieldnamesdf, "PhysicalMarks") &
!str_detect(fieldnamesdf, "DependentInfo") &
!str_detect(fieldnamesdf, "Remarks"))],
"Remarks1")
}
else{
merge_imglists <- df %>%
mutate(filepath = glue("{imgroot}/t{reel}/reel{reel}_img{img}.jpg"))
colnamesdf <- c(names(df)[which(!str_detect(names(df), "PhysicalMarks|DependentInfo|Remarks|ArrivalCert|aka|reel|img|filename") &
!str_detect(names(df), "_Clean|_clean|_ci44|EntryDateMonth|EntryDateDay|NativeBornStrict"))],
"Remarks1", "aka1", "ArrivalCert1", "ArrivalCert2")
}
makenewplot()
first = TRUE
for (file in merge_imglists$filepath){
if (first){
tempdata <- disp_rawimg(file, colnames = colnamesdf)
first = FALSE
}
else{
tempdata <- bind_rows(list(tempdata, disp_rawimg(file, colnames = colnamesdf)))
}
write_csv(tempdata, outpath)
}
# df_out <- bind_rows(lapply(merge_imglists$filepath,
#                                 disp_rawimg,
#                                 colnames = colnamesdf))
return(tempdata)
}
unmatched_rewrite <- check_raw_imgs(unmatched,
outpath = glue("{dbox}/cleaned/missing_ci44_imgs.csv"))
nrow(unmatched_rewrite)
