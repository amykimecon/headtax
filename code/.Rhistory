mutate(taxgrp = ifelse(FEES == 0, "nofee", "fee")) %>%
group_by(YRIMM, tax, taxgrp) %>%
summarize(height = mean(ifelse(HEIGHT==0,NA,HEIGHT), na.rm=TRUE),
n= n()) %>% filter(n > 1)
taxmeanheights = summarize(group_by(height_plot2, tax, taxgrp), meanheight = weighted.mean(height, n))$meanheight
taxmeanheights
summarize(group_by(height_plot2, tax, taxgrp), meanheight = weighted.mean(height, n))
summarize(group_by(height_plot2, tax, taxgrp), meanheight = weighted.mean(height, n)) %>% View()
height_plot2 <- reg_chi %>% filter(AGE >= 23 & AGE <= 50 & YRIMM > 1879 & YRIMM < 1909 & HEIGHT > 100 & MALE == 1) %>%
mutate(taxgrp = ifelse(FEES == 0, "nofee", "fee")) %>%
group_by(YRIMM, tax, taxgrp) %>%
summarize(height = mean(ifelse(HEIGHT==0,NA,HEIGHT), na.rm=TRUE),
n= n()) %>% filter(n > 1)
taxmeanheights = summarize(group_by(height_plot2, tax, taxgrp), meanheight = weighted.mean(height, n))$meanheight
summarize(group_by(height_plot2, tax, taxgrp), meanheight = weighted.mean(height, n)) %>% View()
height_plot <- reg_chi %>%
filter(AGE >= 23 & AGE <= 50 & YRIMM > 1879 & YRIMM < 1924 & HEIGHT > 100 & MALE == 1) %>%
group_by(YRIMM, tax) %>%
summarize(height = mean(ifelse(HEIGHT==0,NA,HEIGHT), na.rm=TRUE),
medheight = median(ifelse(HEIGHT == 0, NA, HEIGHT), na.rm=TRUE),
height25 = quantile(ifelse(HEIGHT==0,NA,HEIGHT),0.25,na.rm=TRUE),
height75 = quantile(ifelse(HEIGHT==0,NA,HEIGHT),0.75,na.rm=TRUE),
n= n())
height_plot2 <- reg_chi %>% filter(AGE >= 23 & AGE <= 50 & YRIMM > 1879 & YRIMM < 1924 & HEIGHT > 100 & MALE == 1) %>%
mutate(taxgrp = ifelse(FEES == 0, "nofee", "fee")) %>%
group_by(YRIMM, tax, taxgrp) %>%
summarize(height = mean(ifelse(HEIGHT==0,NA,HEIGHT), na.rm=TRUE),
n= n()) %>% filter(n > 1)
ggplot(height_plot, aes(x = YRIMM, y = height)) +
#geom_segment(aes(y = taxmeanheights[1], yend = taxmeanheights[1], x = 1881, xend = 1885), inherit.aes = FALSE, color = c3) +
#geom_segment(aes(y = taxmeanheights[2], yend = taxmeanheights[2], x = 1885, xend = 1900), inherit.aes = FALSE, color = c3) +
#geom_segment(aes(y = taxmeanheights[3], yend = taxmeanheights[3], x = 1900, xend = 1903), inherit.aes = FALSE, color = c3) +
#geom_segment(aes(y = taxmeanheights[4], yend = taxmeanheights[4], x = 1903, xend = 1923), inherit.aes = FALSE, color = c3) +
geom_vline(aes(xintercept = yrs), data = headtaxcuts, show.legend = FALSE, color = "#808080", linetype = 3) +
geom_text(aes(x = yrs, y = 167.5, label = labs), data = headtaxcuts, inherit.aes = FALSE, angle = 90, nudge_x = 0.8, size = 3, color = "#808080") +
geom_text(aes(x = 1919, y = taxmeanheights[4] - 0.2, label = "Mean Height Over Interval"), inherit.aes=FALSE, color = c3, size = 2.5) +
geom_point(aes(size = n), color = c1, alpha = 0.9) +
theme_minimal() + theme(legend.position='bottom') +
labs(x = "Year of Immigration", y = "Mean Height of Chinese Immigrants (cm)", size = "# of Chinese Immigrants")
# plot by taxpayer group (deprecated)
ggplot(height_plot2, aes(x = YRIMM, y = height, color = taxgrp)) +
geom_smooth(method = "lm", mapping = aes(weight = n)) +
geom_vline(aes(xintercept = yrs), data = headtaxcuts, show.legend = FALSE, color = "#808080", linetype = 3) +
geom_text(aes(x = yrs, y = 167.5, label = labs), data = headtaxcuts, inherit.aes = FALSE, angle = 90, nudge_x = 0.8, size = 3, color = "#808080") +
geom_point(aes(size = n), alpha = 0.9) + theme_minimal() + theme(legend.position='bottom') +
labs(x = "Year of Immigration", y = "Mean Height of Chinese Immigrants (cm)", size = "# Chinese Immigrants")
height_plot_tax <- reg_chi %>%
filter(FEES > 0 | YRIMM < 1886 & AGE >= 23 & AGE <= 50 & YRIMM > 1879 & YRIMM < 1924 & HEIGHT > 100 & MALE == 1) %>%
group_by(YRIMM, tax) %>%
summarize(height = mean(ifelse(HEIGHT==0,NA,HEIGHT), na.rm=TRUE),
medheight = median(ifelse(HEIGHT == 0, NA, HEIGHT), na.rm=TRUE),
height25 = quantile(ifelse(HEIGHT==0,NA,HEIGHT),0.25,na.rm=TRUE),
height75 = quantile(ifelse(HEIGHT==0,NA,HEIGHT),0.75,na.rm=TRUE),
n= n())
taxmeanheights = summarize(group_by(height_plot, tax), meanheight = weighted.mean(height, n))$meanheight
taxmeanheights_tax = summarize(group_by(height_plot_tax, tax), meanheight = weighted.mean(height, n))$meanheight
ggplot(height_plot, aes(x = YRIMM, y = height)) +
geom_segment(aes(y = taxmeanheights[1], yend = taxmeanheights[1], x = 1881, xend = 1885), inherit.aes = FALSE, color = c3) +
geom_segment(aes(y = taxmeanheights[2], yend = taxmeanheights[2], x = 1885, xend = 1900), inherit.aes = FALSE, color = c3) +
geom_segment(aes(y = taxmeanheights[3], yend = taxmeanheights[3], x = 1900, xend = 1903), inherit.aes = FALSE, color = c3) +
geom_segment(aes(y = taxmeanheights[4], yend = taxmeanheights[4], x = 1903, xend = 1923), inherit.aes = FALSE, color = c3) +
geom_vline(aes(xintercept = yrs), data = headtaxcuts, show.legend = FALSE, color = "#808080", linetype = 3) +
geom_text(aes(x = yrs, y = 167.5, label = labs), data = headtaxcuts, inherit.aes = FALSE, angle = 90, nudge_x = 0.8, size = 3, color = "#808080") +
geom_text(aes(x = 1919, y = taxmeanheights[4] - 0.2, label = "Mean Height Over Interval"), inherit.aes=FALSE, color = c3, size = 2.5) +
geom_point(aes(size = n), color = c1, alpha = 0.9) +
theme_minimal() + theme(legend.position='bottom') +
labs(x = "Year of Immigration", y = "Mean Height of Chinese Immigrants (cm)", size = "# of Chinese Immigrants")
fig_height_tax <- ggplot(height_plot_tax, aes(x = YRIMM, y = height)) +
geom_segment(aes(y = taxmeanheights_tax[1], yend = taxmeanheights_tax[1], x = 1881, xend = 1885), inherit.aes = FALSE, color = c3) +
geom_segment(aes(y = taxmeanheights_tax[2], yend = taxmeanheights_tax[2], x = 1885, xend = 1900), inherit.aes = FALSE, color = c3) +
geom_segment(aes(y = taxmeanheights_tax[3], yend = taxmeanheights_tax[3], x = 1900, xend = 1903), inherit.aes = FALSE, color = c3) +
geom_segment(aes(y = taxmeanheights_tax[4], yend = taxmeanheights_tax[4], x = 1903, xend = 1923), inherit.aes = FALSE, color = c3) +
geom_vline(aes(xintercept = yrs), data = headtaxcuts, show.legend = FALSE, color = "#808080", linetype = 3) +
geom_text(aes(x = yrs, y = 167.5, label = labs), data = headtaxcuts, inherit.aes = FALSE, angle = 90, nudge_x = 0.8, size = 3, color = "#808080") +
geom_text(aes(x = 1919, y = taxmeanheights[4] - 0.2, label = "Mean Height Over Interval"), inherit.aes=FALSE, color = c3, size = 2.5) +
geom_point(aes(size = n), color = c1, alpha = 0.9) +
theme_minimal() + theme(legend.position='bottom') +
labs(x = "Year of Immigration", y = "Mean Height of Chinese Immigrants (cm)", size = "# of Chinese Immigrants")
fig_height_tax
height_plot_tax <- reg_chi %>%
filter((FEES > 0 | YRIMM < 1886) & AGE >= 23 & AGE <= 50 & YRIMM > 1879 & YRIMM < 1924 & HEIGHT > 100 & MALE == 1) %>%
group_by(YRIMM, tax) %>%
summarize(height = mean(ifelse(HEIGHT==0,NA,HEIGHT), na.rm=TRUE),
medheight = median(ifelse(HEIGHT == 0, NA, HEIGHT), na.rm=TRUE),
height25 = quantile(ifelse(HEIGHT==0,NA,HEIGHT),0.25,na.rm=TRUE),
height75 = quantile(ifelse(HEIGHT==0,NA,HEIGHT),0.75,na.rm=TRUE),
n= n())
# mean heights by tax paid
taxmeanheights = summarize(group_by(height_plot, tax), meanheight = weighted.mean(height, n))$meanheight
taxmeanheights_tax = summarize(group_by(height_plot_tax, tax), meanheight = weighted.mean(height, n))$meanheight
ggplot(height_plot_tax, aes(x = YRIMM, y = height)) +
geom_segment(aes(y = taxmeanheights_tax[1], yend = taxmeanheights_tax[1], x = 1881, xend = 1885), inherit.aes = FALSE, color = c3) +
geom_segment(aes(y = taxmeanheights_tax[2], yend = taxmeanheights_tax[2], x = 1885, xend = 1900), inherit.aes = FALSE, color = c3) +
geom_segment(aes(y = taxmeanheights_tax[3], yend = taxmeanheights_tax[3], x = 1900, xend = 1903), inherit.aes = FALSE, color = c3) +
geom_segment(aes(y = taxmeanheights_tax[4], yend = taxmeanheights_tax[4], x = 1903, xend = 1923), inherit.aes = FALSE, color = c3) +
geom_vline(aes(xintercept = yrs), data = headtaxcuts, show.legend = FALSE, color = "#808080", linetype = 3) +
geom_text(aes(x = yrs, y = 167.5, label = labs), data = headtaxcuts, inherit.aes = FALSE, angle = 90, nudge_x = 0.8, size = 3, color = "#808080") +
geom_text(aes(x = 1919, y = taxmeanheights[4] - 0.2, label = "Mean Height Over Interval"), inherit.aes=FALSE, color = c3, size = 2.5) +
geom_point(aes(size = n), color = c1, alpha = 0.9) +
theme_minimal() + theme(legend.position='bottom') +
labs(x = "Year of Immigration", y = "Mean Height of Chinese Immigrants (cm)", size = "# of Chinese Immigrants")
taxmeanheights_tax
outreg_vars(reg_clean_sample %>% filter(YRIMM <= 1908 & YRIMM >= 1882),
c("HEIGHT", "AGE", "WHIPPLE", "LABOR", "MERCHSTUD"), loglog = TRUE)
outreg <- function(df, yvar, ylab){
# reg0: no ctrls for birthyear ----
reg0 <- lm(data = df, as.formula(glue("{yvar} ~ factor(month) + factor(tax)")))
# reg1: quadratic birthyear ----
reg1 <- lm(data = df, as.formula(glue("{yvar} ~ factor(month) + factor(tax) + BIRTHYEAR + I(BIRTHYEAR^2)")))
# reg2: birthyear fes ----
reg2 <- lm(data = df, as.formula(glue("{yvar} ~ factor(month) + factor(tax) + factor(BIRTHYEAR)")))
print(summary(reg2))
regmean <- round(mean(df[[yvar]]),1)
regse <- round(sd(df[[yvar]])/sqrt(nrow(df) - 1),1)
# reg3: log-log ----
# reg3 <- lm(data = df, as.formula(glue("log({yvar}) ~ factor(month) + log(cost) + factor(BIRTHYEAR)")))
# regmean3 <- round(mean(log(df[[yvar]])),1)
# regse3 <- round(sd(log(df[[yvar]]))/sqrt(nrow(df) - 1),1)
#
# reg50: ht 50 ----
reg50 <- lm(data = df %>% filter(YRIMM >= 1883 & YRIMM <= 1888),
as.formula(glue("log({yvar}) ~ factor(month) + log(cost) + factor(BIRTHYEAR)")))
print(summary(reg50))
regmean50 <- round(mean(filter(df, YRIMM >= 1883 & YRIMM <= 1888)[[yvar]]),1)
regse50 <- round(sd(filter(df, YRIMM >= 1883 & YRIMM <= 1888)[[yvar]])/
sqrt(nrow(filter(df, YRIMM >= 1883 & YRIMM <= 1888))-1),1)
# ht 100 ----
reg100 <- lm(data = df %>% filter(YRIMM >= 1898 & MOIMM <= as.Date("1903-07-01")),
as.formula(glue("log({yvar}) ~ factor(month) + log(cost) + factor(BIRTHYEAR)")))
regmean100 <- round(mean(filter(df, YRIMM >= 1898 & MOIMM <= as.Date("1903-07-01"))[[yvar]]),1)
print(summary(reg100))
regse100 <- round(sd(filter(df, YRIMM >= 1898 & MOIMM <= as.Date("1903-07-01"))[[yvar]])/
sqrt(nrow(filter(df, YRIMM >= 1898 & MOIMM <= as.Date("1903-07-01")))-1),1)
# ht 500 ----
reg500 <- lm(data = df %>% filter(MOIMM >= as.Date("1901-06-01") & YRIMM <= 1906),
as.formula(glue("log({yvar}) ~ factor(month) + log(cost) + factor(BIRTHYEAR)")))
print(summary(reg500))
regmean500 <- round(mean(filter(df, MOIMM >= as.Date("1901-06-01") & YRIMM <= 1906)[[yvar]]),1)
regse500 <- round(sd(filter(df, MOIMM >= as.Date("1901-06-01") & YRIMM <= 1906)[[yvar]])/
sqrt(nrow(filter(df, MOIMM >= as.Date("1901-06-01") & YRIMM <= 1906))-1),1)
# compiling lists ----
reg_models <- list(reg0, reg2, reg50, reg100, reg500)
reg_means <- c(regmean, regmean, regmean50, regmean100, regmean500)
reg_ses <- c(glue("({regse})"), glue("({regse})"),
glue("({regse50})"),glue("({regse100})"),glue("({regse500})"))
# stargazer ----
stargazer(reg_models,
se = lapply(reg_models, robustse),
keep = c("^factor\\(tax\\)"),
#out = glue("{git}/output/paper/tables/{str_to_lower(yvar)}_regs.tex"),
float = FALSE,
digits = 2,
intercept.bottom = FALSE,
keep.stat=c("n","adj.rsq"),
column.labels = c("All Years (1882-1921)", "\\$50 Tax (1883-1888)",
"\\$100 Tax (1898-1903)", "\\$500 Tax (1901-1906)"),
column.separate = c(2,1,1,1),
covariate.labels = c("$\\gamma_{50}$ (\\$50 Tax)",
"$\\gamma_{100}$ (\\$100 Tax)",
"$\\gamma_{500}$ (\\$500 Tax)"
),
add.lines = list(c("Dep. Var. Mean (SE)", reg_means),c("", reg_ses),
c('Birth Year FE', "No", rep("Yes",4))),
dep.var.caption = paste0("\\textit{Dependent variable:} ", ylab),
table.layout = "=cl#-t-as=")
}
ht_samp <- function(df, ht){
if(ht == 50){
df_filt <- df %>% filter(YRIMM >= 1883 & YRIMM <= 1888)
}
else if (ht == 100){
df_filt <- df %>% filter(YRIMM >= 1898 & MOIMM <= as.Date("1903-07-01"))
}
else if (ht == 500){
df_filt <- df %>% filter(MOIMM >= as.Date("1901-06-01") & YRIMM <= 1906)
}
return(df_filt)
}
outreg_vars <- function(df, yvars, ylabs = yvars, loglog = FALSE, outfile_root = "selection"){
reg_models = list()
reg_means = numeric(length(yvars))
reg_ses = character(length(yvars))
i = 1
for (yvar in yvars){
df_filt <- df[which(!is.na(df[[yvar]])),]
if (loglog){
if (yvar == "AGE"){
reg2 <- lm(data = df_filt, as.formula(glue("{yvar} ~ factor(month) + log(cost)")))
}
else{
reg2 <- lm(data = df_filt, as.formula(glue("{yvar} ~ factor(month) + log(cost) + factor(BIRTHYEAR)")))
}
#reg2 <- lm(data = df_filt, as.formula(glue("{yvar} ~ factor(month) + log(cost) + factor(BIRTHYEAR)")))
#regmean = round(mean(log(df_filt[[yvar]])),1)
regmean = round(mean(df_filt[[yvar]]),1)
#regse = glue("({round(sd(log(df_filt[[yvar]]))/sqrt(nrow(df_filt) - 1),1)})")
regse = glue("({round(sd(df_filt[[yvar]])/sqrt(nrow(df_filt) - 1),1)})")
}
else{
reg2 <- lm(data = df_filt, as.formula(glue("{yvar} ~ factor(month) + factor(tax) + factor(BIRTHYEAR)")))
regmean = round(mean(df_filt[[yvar]]),1)
regse = glue("({round(sd(df_filt[[yvar]])/sqrt(nrow(df_filt) - 1),1)})")
}
reg_models[[i]] <- reg2
reg_means[i] <- regmean
reg_ses[i] <- regse
i = i + 1
}
# stargazer ----
if (loglog){
keepvars = c("log\\(cost\\)")
covlabs = c("$\\gamma^{\\varepsilon}$ (log Cost)")
extralines = list(c("Dep. Var. Mean", reg_means))
}
else{
keepvars = c("^factor\\(tax\\)")
covlabs = c("$\\gamma_{50}$ (\\$50 Tax)",
"$\\gamma_{100}$ (\\$100 Tax)",
"$\\gamma_{500}$ (\\$500 Tax)")
extralines = list(c("Dep. Var. Mean", reg_means))
}
stargazer(reg_models,
se = lapply(reg_models, robustse),
keep = keepvars,
out = glue("{git}/output/paper/tables/{outfile_root}_regs.tex"),
float = FALSE,
digits = 2,
intercept.bottom = FALSE,
keep.stat=c("n","adj.rsq"),
column.labels = ylabs,
column.separate = rep(1,length(ylabs)),
covariate.labels = covlabs,
add.lines = extralines,
table.layout = "=lc#-t-as=")
}
# REG DATA
reg_clean_sample <- reg_clean %>% filter(YRIMM >= regstart & YRIMM <= regend & BIRTHYEAR > 0) %>%
mutate(HEIGHT = ifelse(height_samp == 1, HEIGHT, NA),
logHEIGHT = log(HEIGHT),
AGE = ifelse(age_samp == 1, AGE_ARR, NA),
WHIPPLE = ifelse(whipple_samp == 1, WHIPPLE, NA),
LABOR = ifelse(occ_samp == 1, ifelse(OCCGRP == "Labourer", 1, 0), NA),
MERCHANT = ifelse(occ_samp == 1, ifelse(OCCGRP == "Merchant", 1, 0), NA),
STUDENT = ifelse(occ_samp == 1, ifelse(OCCGRP == "Student", 1, 0), NA),
MERCHSTUD = ifelse(occ_samp == 1, ifelse(OCCGRP == "Merchant" | OCCGRP == "Student", 1, 0), NA)
)
outreg_vars(reg_clean_sample %>% filter(YRIMM <= 1908 & YRIMM >= 1882),
c("HEIGHT", "AGE", "WHIPPLE", "LABOR", "MERCHSTUD"), loglog = TRUE)
outreg_vars(reg_clean_sample %>% ht_samp(50),
c("HEIGHT", "AGE", "WHIPPLE", "LABOR", "MERCHSTUD"), loglog = TRUE,
outfile_root = "selection50")
outreg_vars(reg_clean_sample %>% ht_samp(100),
c("HEIGHT", "AGE", "WHIPPLE", "LABOR", "MERCHSTUD"), loglog = TRUE,
outfile_root = "selection100")
outreg_vars(reg_clean_sample %>% ht_samp(500),
c("HEIGHT", "AGE", "WHIPPLE", "LABOR", "MERCHSTUD"), loglog = TRUE,
outfile_root = "selection500")
outreg_vars(reg_clean_sample %>% filter(YRIMM <= 1908 & YRIMM >= 1882),
c("HEIGHT", "AGE", "WHIPPLE", "LABOR", "MERCHSTUD"), loglog = TRUE)
outreg_vars(reg_clean_sample %>% ht_samp(500),
c("HEIGHT", "AGE", "WHIPPLE", "LABOR", "MERCHSTUD"), loglog = TRUE,
outfile_root = "selection500")
outreg <- function(df, yvar, ylab){
# reg0: no ctrls for birthyear ----
reg0 <- lm(data = df, as.formula(glue("{yvar} ~ factor(month) + factor(tax) + MOIMM")))
# reg1: quadratic birthyear ----
reg1 <- lm(data = df, as.formula(glue("{yvar} ~ factor(month) + factor(tax) + BIRTHYEAR + I(BIRTHYEAR^2) + MOIMM")))
# reg2: birthyear fes ----
reg2 <- lm(data = df, as.formula(glue("{yvar} ~ factor(month) + factor(tax) + factor(BIRTHYEAR) + MOIMM")))
print(summary(reg2))
regmean <- round(mean(df[[yvar]]),1)
regse <- round(sd(df[[yvar]])/sqrt(nrow(df) - 1),1)
# reg3: log-log ----
# reg3 <- lm(data = df, as.formula(glue("log({yvar}) ~ factor(month) + log(cost) + factor(BIRTHYEAR)")))
# regmean3 <- round(mean(log(df[[yvar]])),1)
# regse3 <- round(sd(log(df[[yvar]]))/sqrt(nrow(df) - 1),1)
#
# reg50: ht 50 ----
reg50 <- lm(data = df %>% filter(YRIMM >= 1883 & YRIMM <= 1888),
as.formula(glue("log({yvar}) ~ factor(month) + log(cost) + factor(BIRTHYEAR) + MOIMM")))
print(summary(reg50))
regmean50 <- round(mean(filter(df, YRIMM >= 1883 & YRIMM <= 1888)[[yvar]]),1)
regse50 <- round(sd(filter(df, YRIMM >= 1883 & YRIMM <= 1888)[[yvar]])/
sqrt(nrow(filter(df, YRIMM >= 1883 & YRIMM <= 1888))-1),1)
# ht 100 ----
reg100 <- lm(data = df %>% filter(YRIMM >= 1898 & MOIMM <= as.Date("1903-07-01")),
as.formula(glue("log({yvar}) ~ factor(month) + log(cost) + factor(BIRTHYEAR) + MOIMM")))
regmean100 <- round(mean(filter(df, YRIMM >= 1898 & MOIMM <= as.Date("1903-07-01"))[[yvar]]),1)
print(summary(reg100))
regse100 <- round(sd(filter(df, YRIMM >= 1898 & MOIMM <= as.Date("1903-07-01"))[[yvar]])/
sqrt(nrow(filter(df, YRIMM >= 1898 & MOIMM <= as.Date("1903-07-01")))-1),1)
# ht 500 ----
reg500 <- lm(data = df %>% filter(MOIMM >= as.Date("1901-06-01") & YRIMM <= 1906),
as.formula(glue("log({yvar}) ~ factor(month) + log(cost) + factor(BIRTHYEAR) + MOIMM")))
print(summary(reg500))
regmean500 <- round(mean(filter(df, MOIMM >= as.Date("1901-06-01") & YRIMM <= 1906)[[yvar]]),1)
regse500 <- round(sd(filter(df, MOIMM >= as.Date("1901-06-01") & YRIMM <= 1906)[[yvar]])/
sqrt(nrow(filter(df, MOIMM >= as.Date("1901-06-01") & YRIMM <= 1906))-1),1)
# compiling lists ----
reg_models <- list(reg0, reg2, reg50, reg100, reg500)
reg_means <- c(regmean, regmean, regmean50, regmean100, regmean500)
reg_ses <- c(glue("({regse})"), glue("({regse})"),
glue("({regse50})"),glue("({regse100})"),glue("({regse500})"))
# stargazer ----
stargazer(reg_models,
se = lapply(reg_models, robustse),
keep = c("^factor\\(tax\\)"),
#out = glue("{git}/output/paper/tables/{str_to_lower(yvar)}_regs.tex"),
float = FALSE,
digits = 2,
intercept.bottom = FALSE,
keep.stat=c("n","adj.rsq"),
column.labels = c("All Years (1882-1921)", "\\$50 Tax (1883-1888)",
"\\$100 Tax (1898-1903)", "\\$500 Tax (1901-1906)"),
column.separate = c(2,1,1,1),
covariate.labels = c("$\\gamma_{50}$ (\\$50 Tax)",
"$\\gamma_{100}$ (\\$100 Tax)",
"$\\gamma_{500}$ (\\$500 Tax)"
),
add.lines = list(c("Dep. Var. Mean (SE)", reg_means),c("", reg_ses),
c('Birth Year FE', "No", rep("Yes",4))),
dep.var.caption = paste0("\\textit{Dependent variable:} ", ylab),
table.layout = "=cl#-t-as=")
}
outreg_vars(reg_clean_sample %>% filter(YRIMM <= 1908 & YRIMM >= 1882),
c("HEIGHT", "AGE", "WHIPPLE", "LABOR", "MERCHSTUD"), loglog = TRUE)
outreg_vars <- function(df, yvars, ylabs = yvars, loglog = FALSE, outfile_root = "selection"){
reg_models = list()
reg_means = numeric(length(yvars))
reg_ses = character(length(yvars))
i = 1
for (yvar in yvars){
df_filt <- df[which(!is.na(df[[yvar]])),]
if (loglog){
if (yvar == "AGE"){
reg2 <- lm(data = df_filt, as.formula(glue("{yvar} ~ factor(month) + log(cost) + MOIMM")))
}
else{
reg2 <- lm(data = df_filt, as.formula(glue("{yvar} ~ factor(month) + log(cost) + factor(BIRTHYEAR) + MOIMM")))
}
#reg2 <- lm(data = df_filt, as.formula(glue("{yvar} ~ factor(month) + log(cost) + factor(BIRTHYEAR)")))
#regmean = round(mean(log(df_filt[[yvar]])),1)
regmean = round(mean(df_filt[[yvar]]),1)
#regse = glue("({round(sd(log(df_filt[[yvar]]))/sqrt(nrow(df_filt) - 1),1)})")
regse = glue("({round(sd(df_filt[[yvar]])/sqrt(nrow(df_filt) - 1),1)})")
}
else{
reg2 <- lm(data = df_filt, as.formula(glue("{yvar} ~ factor(month) + factor(tax) + factor(BIRTHYEAR) + MOIMM")))
regmean = round(mean(df_filt[[yvar]]),1)
regse = glue("({round(sd(df_filt[[yvar]])/sqrt(nrow(df_filt) - 1),1)})")
}
reg_models[[i]] <- reg2
reg_means[i] <- regmean
reg_ses[i] <- regse
i = i + 1
}
# stargazer ----
if (loglog){
keepvars = c("log\\(cost\\)")
covlabs = c("$\\gamma^{\\varepsilon}$ (log Cost)")
extralines = list(c("Dep. Var. Mean", reg_means))
}
else{
keepvars = c("^factor\\(tax\\)")
covlabs = c("$\\gamma_{50}$ (\\$50 Tax)",
"$\\gamma_{100}$ (\\$100 Tax)",
"$\\gamma_{500}$ (\\$500 Tax)")
extralines = list(c("Dep. Var. Mean", reg_means))
}
stargazer(reg_models,
se = lapply(reg_models, robustse),
keep = keepvars,
out = glue("{git}/output/paper/tables/{outfile_root}_regs.tex"),
float = FALSE,
digits = 2,
intercept.bottom = FALSE,
keep.stat=c("n","adj.rsq"),
column.labels = ylabs,
column.separate = rep(1,length(ylabs)),
covariate.labels = covlabs,
add.lines = extralines,
table.layout = "=lc#-t-as=")
}
outreg_vars(reg_clean_sample %>% filter(YRIMM <= 1908 & YRIMM >= 1882),
c("HEIGHT", "AGE", "WHIPPLE", "LABOR", "MERCHSTUD"), loglog = TRUE)
robustse <- function(model, type = "HC1"){
return(sqrt(diag(vcovHC(model, type = type))))
}
robustse(reg)
robustse(reg, type = "NeweyWest")
robustse <- function(model, type = "HC1"){
if (type == "NeweyWest"){
return(sqrt(diag(NeweyWest(model))))
}
return(sqrt(diag(vcovHC(model, type = type))))
}
outreg_vars <- function(df, yvars, ylabs = yvars, loglog = FALSE, outfile_root = "selection"){
reg_models = list()
reg_means = numeric(length(yvars))
reg_ses = character(length(yvars))
i = 1
for (yvar in yvars){
df_filt <- df[which(!is.na(df[[yvar]])),]
if (loglog){
if (yvar == "AGE"){
reg2 <- lm(data = df_filt, as.formula(glue("{yvar} ~ factor(month) + log(cost)")))
}
else{
reg2 <- lm(data = df_filt, as.formula(glue("{yvar} ~ factor(month) + log(cost) + factor(BIRTHYEAR)")))
}
#reg2 <- lm(data = df_filt, as.formula(glue("{yvar} ~ factor(month) + log(cost) + factor(BIRTHYEAR)")))
#regmean = round(mean(log(df_filt[[yvar]])),1)
regmean = round(mean(df_filt[[yvar]]),1)
#regse = glue("({round(sd(log(df_filt[[yvar]]))/sqrt(nrow(df_filt) - 1),1)})")
regse = glue("({round(sd(df_filt[[yvar]])/sqrt(nrow(df_filt) - 1),1)})")
}
else{
reg2 <- lm(data = df_filt, as.formula(glue("{yvar} ~ factor(month) + factor(tax) + factor(BIRTHYEAR)")))
regmean = round(mean(df_filt[[yvar]]),1)
regse = glue("({round(sd(df_filt[[yvar]])/sqrt(nrow(df_filt) - 1),1)})")
}
reg_models[[i]] <- reg2
reg_means[i] <- regmean
reg_ses[i] <- regse
i = i + 1
}
# stargazer ----
if (loglog){
keepvars = c("log\\(cost\\)")
covlabs = c("$\\gamma^{\\varepsilon}$ (log Cost)")
extralines = list(c("Dep. Var. Mean", reg_means))
}
else{
keepvars = c("^factor\\(tax\\)")
covlabs = c("$\\gamma_{50}$ (\\$50 Tax)",
"$\\gamma_{100}$ (\\$100 Tax)",
"$\\gamma_{500}$ (\\$500 Tax)")
extralines = list(c("Dep. Var. Mean", reg_means))
}
stargazer(reg_models,
se = lapply(reg_models, robustse, type = "NeweyWest"),
keep = keepvars,
out = glue("{git}/output/paper/tables/{outfile_root}_regs.tex"),
float = FALSE,
digits = 2,
intercept.bottom = FALSE,
keep.stat=c("n","adj.rsq"),
column.labels = ylabs,
column.separate = rep(1,length(ylabs)),
covariate.labels = covlabs,
add.lines = extralines,
table.layout = "=lc#-t-as=")
}
outreg_vars(reg_clean_sample %>% filter(YRIMM <= 1908 & YRIMM >= 1882),
c("HEIGHT", "AGE", "WHIPPLE", "LABOR", "MERCHSTUD"), loglog = TRUE)
outreg_vars <- function(df, yvars, ylabs = yvars, loglog = FALSE, outfile_root = "selection"){
reg_models = list()
reg_means = numeric(length(yvars))
reg_ses = character(length(yvars))
i = 1
for (yvar in yvars){
df_filt <- df[which(!is.na(df[[yvar]])),]
if (loglog){
if (yvar == "AGE"){
reg2 <- lm(data = df_filt, as.formula(glue("{yvar} ~ factor(month) + log(cost)")))
}
else{
reg2 <- lm(data = df_filt, as.formula(glue("{yvar} ~ factor(month) + log(cost) + factor(BIRTHYEAR)")))
}
#reg2 <- lm(data = df_filt, as.formula(glue("{yvar} ~ factor(month) + log(cost) + factor(BIRTHYEAR)")))
#regmean = round(mean(log(df_filt[[yvar]])),1)
regmean = round(mean(df_filt[[yvar]]),1)
#regse = glue("({round(sd(log(df_filt[[yvar]]))/sqrt(nrow(df_filt) - 1),1)})")
regse = glue("({round(sd(df_filt[[yvar]])/sqrt(nrow(df_filt) - 1),1)})")
}
else{
reg2 <- lm(data = df_filt, as.formula(glue("{yvar} ~ factor(month) + factor(tax) + factor(BIRTHYEAR)")))
regmean = round(mean(df_filt[[yvar]]),1)
regse = glue("({round(sd(df_filt[[yvar]])/sqrt(nrow(df_filt) - 1),1)})")
}
reg_models[[i]] <- reg2
reg_means[i] <- regmean
reg_ses[i] <- regse
i = i + 1
}
# stargazer ----
if (loglog){
keepvars = c("log\\(cost\\)")
covlabs = c("$\\gamma^{\\varepsilon}$ (log Cost)")
extralines = list(c("Dep. Var. Mean", reg_means))
}
else{
keepvars = c("^factor\\(tax\\)")
covlabs = c("$\\gamma_{50}$ (\\$50 Tax)",
"$\\gamma_{100}$ (\\$100 Tax)",
"$\\gamma_{500}$ (\\$500 Tax)")
extralines = list(c("Dep. Var. Mean", reg_means))
}
stargazer(reg_models,
se = lapply(reg_models, robustse),
keep = keepvars,
out = glue("{git}/output/paper/tables/{outfile_root}_regs.tex"),
float = FALSE,
digits = 2,
intercept.bottom = FALSE,
keep.stat=c("n","adj.rsq"),
column.labels = ylabs,
column.separate = rep(1,length(ylabs)),
covariate.labels = covlabs,
add.lines = extralines,
table.layout = "=lc#-t-as=")
}
